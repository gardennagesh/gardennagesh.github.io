{"name":"NAGESH  NANJUNDACHRI   garden.nagesh@gmail.com   nagesh_garden@yahoo.com","tagline":"MY SKILLS IN SIMPLE PROGRAMMES","body":"<p>/***************************************************</p>\r\n<p>** Programme: Demonstrate how to to store address in char array </p>\r\n<p>** Programmer: Nagesh Nanjundachari.</p>\r\n<p>** Below programme is to demonstrate how u_char array is used to store address of int-data.</p>\r\n<p>** Logic is to split integer address into bytes and store in u_char array. And then derefer u_char array.</p>\r\n<p>** Below, memcpy is used for copying address, which uses 4 bytes of ptr_and_data.</p>\r\n<p>** strcpy used for copying  abcde and null, which uses 6 bytes of ptr_and_data.</p>\r\n<p>**/</p>\r\n<p>#include&lt;stdio.h&gt;</p>\r\n<p>#include&lt;string.h&gt;</p>\r\n<p>unsigned char ptr_and_data[10];</p>\r\n<p>main () {</p>\r\n<p> int  idata = 99;</p>\r\n<p></p>\r\n<p>     memcpy (ptr_and_data,    ((char *)&idata),   1);</p>\r\n<p>     memcpy (ptr_and_data+1,  ((char *)&idata)+1, 1);</p>\r\n<p>     memcpy (ptr_and_data+2,  ((char *)&idata)+2, 1);</p>\r\n<p>     memcpy (ptr_and_data+3,  ((char *)&idata)+3, 1);</p>\r\n<p>     </p>\r\n<p>     strcpy (ptr_and_data+4, \"abcde\");</p>\r\n<p>     printf ( \"%d\\n\", *((int *)ptr_and_data) );</p>\r\n<p>     printf ( \"%s\\n\", ptr_and_data+4 );</p>\r\n<p>}</p>\r\n<p></p>\r\n<p>/***************************************************</p>\r\n<p> * So, now we can use char-array as node of linked-list.</p>\r\n<p> * Logic: char array of more than 4bytes is required. 4 bytes for address storing rest of bytes for data storing.</p>\r\n<p>/***************************************************</p>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}